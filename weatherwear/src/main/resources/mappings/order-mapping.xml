<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	 			
<mapper namespace="OrderDAO">
	<select id="getOrderList" resultType="hashMap">
		SELECT od.orderId, od.orderDate, od.clientId, 
			cl.clientName, cl.clientNum, di.deliverNum,
	        ad.addressName, ad.addressNum, ad.addressPostNum, ad.address1, ad.address2, ad.addressMemo,
	        pr.productName, pr.productId, SUBSTRING(oi.optionId, LENGTH(pr.productId)+1) as optionName, oi.orderProCnt, oi.orderTotal, oi.orderStatus, 
	        od.orderPrice, od.usedPoint, ci.couponPrice, pi.paymentMethod, pi.paymentDate, pi.paymentStatus
		FROM orders od
		LEFT JOIN orders_info oi ON (od.orderId=oi.orderId)
		LEFT JOIN client cl ON (od.clientId=cl.clientId)
		LEFT JOIN client_address ad ON (od.clientId=ad.clientId AND od.addressId=ad.addressId)
		LEFT JOIN payment_info pi ON (od.orderId=pi.orderId)
		LEFT JOIN deliver_info di ON (od.orderId=di.orderId)
		LEFT JOIN coupon_info ci ON (od.couponId=ci.couponId)
		LEFT JOIN product pr ON (SUBSTRING(oi.optionId, 1, LENGTH(pr.productId))=pr.productId)
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keyword != null and keyword != ''">
				<if test="searchType == 'orderId'">
					AND od.orderId like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'clientId'">
					AND od.clientId like CONCAT('%', #{keyword}, '%')
				</if>
			</if>
		</trim>
		ORDER BY 
			<choose>
				<when test="orderby == 'clientId'">
					od.clientId ASC , od.orderId DESC
				</when>
				<when test="orderby == 'orderStatus'">
					CASE WHEN oi.orderStatus = '상품준비중' THEN 1
						WHEN oi.orderStatus = '배송준비중' THEN 2
						WHEN oi.orderStatus = '배송보류' THEN 3
						WHEN oi.orderStatus = '배송대기' THEN 4
						WHEN oi.orderStatus = '배송중' THEN 5
						WHEN oi.orderStatus = '배송완료' THEN 6
						WHEN oi.orderStatus = '교환중' THEN 7
						WHEN oi.orderStatus = '환불중' THEN 8
						WHEN oi.orderStatus = '교환완료' THEN 9
						WHEN oi.orderStatus = '환불완료' THEN 10
					END
				</when>
				<otherwise>
					od.orderDate DESC
				</otherwise>
			</choose>
		LIMIT #{startList}, #{listSize};
	</select>
	
	<select id="getOrderListCnt" resultType="int">
		SELECT count(*)
		FROM orders_info oi
		LEFT JOIN orders od ON (oi.orderId=od.orderId)
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keyword != null and keyword != ''">
				<if test="searchType == 'orderId'">
					AND od.orderId like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'clientId'">
					AND od.clientId like CONCAT('%', #{keyword}, '%')
				</if>
			</if>
		</trim>
		ORDER BY 
			<choose>
				<when test="orderby == 'clientId'">
					od.clientId
				</when>
				<when test="orderby == 'orderStatus'">
					oi.orderStatus
				</when>
				<otherwise>
					od.orderDate
				</otherwise>
			</choose>
		, od.orderId
	</select>
	
	<update id="updateOrderStatus" parameterType="java.util.List">
		<foreach collection="list" item="order" index="index">
			UPDATE orders_info SET orderStatus=#{ order.changeValue }
			WHERE orderId=#{ order.orderId } AND optionId LIKE CONCAT(#{ order.productId }, '%');
		</foreach>
	</update>
	
	<update id="updateDeliverNum" parameterType="java.util.List">
		<foreach collection="list" item="order" index="index">
			UPDATE deliver_info SET deliverNum=#{ order.changeValue }
			WHERE orderId=#{ order.orderId };
		</foreach>
	</update>
	
	<insert id="insertAddress" parameterType="hashMap">
		INSERT INTO client_address (addressId, clientId, addressTitle, addressName, addressNum, addressPostNum, address1, address2, addressMemo, addressBase)
		VALUES(#{ addressInfo.addressId }, #{ addressInfo.clientId }, #{ addressInfo.addressTitle }, #{ addressInfo.addressName }, #{ addressInfo.addressNum  }, 
				#{ addressInfo.addressPostNum }, #{ addressInfo.address1 }, #{ addressInfo.address2 }, #{ addressInfo.addressMemo }, #{ addressInfo.addressBase })
		ON DUPLICATE KEY UPDATE
			addressTitle=#{ addressInfo.addressTitle }, 
			addressName=#{ addressInfo.addressName }, 
			addressNum=#{ addressInfo.addressNum }, 
			addressPostNum=#{ addressInfo.addressPostNum }, 
			address1=#{ addressInfo.address1 }, 
			address2=#{ addressInfo.address2 }, 
			addressMemo=#{ addressInfo.addressMemo },
			addressBase=#{ addressInfo.addressBase };
	</insert>
	
	<update id="updateBaseAddress" parameterType="hashMap">
		UPDATE client_address SET addressBase='N' WHERE clientId=#{ addressInfo.clientId } AND addressId != #{ addressInfo.addressId }
	</update>
	
	<insert id="insertOrder" parameterType="hashMap" useGeneratedKeys="true" keyProperty="orderId" keyColumn="orderId">				
		INSERT INTO orders(orderId, clientId, addressId, optionIdList, orderEmail, orderPrice, usedPoint, couponId, cookieId, cookiePwd)
		VALUES(#{ orderId }, #{ orderInfo.clientId }, #{ addressInfo.addressId }, #{ orderInfo.optionIdList }, #{ orderInfo.orderEmail },
				#{ orderInfo.orderPrice }, #{ orderInfo.usedPoint }, #{ orderInfo.couponId }, #{ orderInfo.cookieId }, #{ orderInfo.cookiePwd });
	</insert>
	
	<delete id="deleteCart" parameterType="hashMap">
		DELETE FROM cart WHERE clientId=#{ orderInfo.clientId } AND cartId IN 
			<foreach collection="cartIdList" item="cartId" open="(" separator="," close=")">
				#{ cartId }
			</foreach>
	</delete>
	
	<insert id="insertOrderInfo" parameterType="hashMap">
		INSERT INTO orders_info(orderId, optionId, orderProCnt, orderTotal, orderStatus)
		VALUES
			<foreach collection="orderInfoList" item="order" open="(" separator="), (" close=")">
				#{ orderId }, #{ order.optionId }, #{ order.orderProCnt }, #{ order.orderTotal }, '상품준비중'
			</foreach>
	</insert>
	
	<update id="updateClientPoint" parameterType="hashMap">
		UPDATE client
		SET clientPoint = clientPoint - #{ orderInfo.usedPoint }
		WHERE clientId = #{ orderInfo.clientId }
	</update>
	
	<update id="updateCouponList" parameterType="hashMap">
		UPDATE coupon_list 
		SET couponStatus="사용완료"
		WHERE clientId=#{ usedCouponInfo.clientId } AND couponId=#{ usedCouponInfo.couponId };
	</update>
	
	<insert id="insertPayment" parameterType="hashMap">
		INSERT INTO payment_info(paymentId, orderId, paymentMethod, paymentStatus)
		VALUES(#{ paymentInfo.paymentId }, #{ orderId }, #{ paymentInfo.paymentMethod }, #{ paymentInfo.paymentStatus })
	</insert>
	
	<select id="getOrderInfo" parameterType="hashMap" resultType="hashMap">
		SELECT od.*, ad.*, pi.*, cl.*, cp.*
		FROM orders od
		LEFT JOIN client_address ad ON (ad.addressId = od.addressId )
		LEFT JOIN payment_info pi ON (od.orderId = pi.orderId)
		LEFT JOIN client cl ON (cl.clientId = od.clientId)
		LEFT JOIN coupon_info cp ON(od.couponId = cp.couponId)
		WHERE od.orderId = #{ orderId }
	</select>
	
	<select id="getOrderInfoList" parameterType="hashMap" resultType="hashMap">
		SELECT oi.*, pro.productName, pro.productId, pri.productPrice, CONCAT(pm.imageDir, pm.imageName) AS mainImage, op.*
		FROM orders_info oi
		LEFT JOIN product pro ON (SUBSTRING(oi.optionId, 1, 9)=pro.productId)
		LEFT JOIN product_price pri ON (pro.productId = pri.productId)
		LEFT JOIN product_image pm ON (pro.productId = pm.imageBy AND pm.imageStatus="대표")
		LEFT JOIN option_info op ON (oi.optionId = op.optionId)
		WHERE oi.orderId=#{ orderId }
	</select>
	
	<update id="updateProductStock" parameterType="hashMap">
		<foreach collection="orderInfoList" item="order" separator=";">
		UPDATE option_info
		SET stockCnt= stockCnt - #{ order.orderProCnt }
		WHERE optionId = #{ order.optionId }
		</foreach> 
	</update>
	
<!-- 나의 주문 내역 -->
	<select id="getMyOrderList" parameterType="hashMap" resultType="hashMap">
		SELECT oi.orderId, oi.orderProCnt, oi.orderStatus, oi.orderTotal, op.optionColor, op.optionSize, oi.optionId, o.orderDate, p.productId, p.productName, CONCAT(pi.ImageDir, pi.ImageName) as image
		FROM orders_info oi 
		JOIN orders o ON oi.orderId = o.orderId
		JOIN option_info op ON oi.optionId = op.optionId
		JOIN product_image pi ON pi.ImageBy = op.productId
		JOIN product p ON p.productId = op.productId
		WHERE o.clientId = #{clientId} AND pi.ImageStatus = '대표'
		<if test="search.keyword != null and search.keyword != ''">
			<if test="search.searchType == 'orderDate'">
				AND od.orderDate like CONCAT('%', #{keyword}, '%')
			</if>
		</if>
		ORDER BY o.orderDate
		LIMIT #{search.startList}, #{search.listSize};
	</select>
	
	<select id="getMyOrderListCnt" parameterType="hashMap" resultType="int">
		SELECT count(*)
		FROM orders
		WHERE clientId = #{clientId}
		<if test="search.keyword != null and search.keyword != ''">
			<if test="search.searchType == 'orderDate'">
				AND od.orderDate like CONCAT('%', #{keyword}, '%')
			</if>
		</if>
	</select>
</mapper>