<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	 			
<mapper namespace="ClientDAO">
	<select id="getClientList" resultType="client">
		SELECT row_number() over(ORDER BY clientRegDate) as clientIdx, c.*, w.*
		FROM client c
		LEFT JOIN withdraw_info w
		ON c.clientId = w.withdrawId
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keyword != null and keyword != ''">
				<if test="searchType == 'clientId'">
					AND clientId like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'clientName'">
					AND clientName like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'gradeId'">
					AND gradeId = #{keyword}
				</if>
			</if>
		</trim>
		ORDER BY clientIdx DESC
		LIMIT #{startList}, #{listSize}
	</select>
	
	<select id="getClientListCnt" resultType="int">
		SELECT count(*)
		FROM client
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keyword != null and keyword != ''">
				<if test="searchType == 'clientId'">
					AND clientId like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'clientName'">
					AND clientName like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'gradeId'">
					AND gradeId = #{keyword}
				</if>
			</if>
		</trim>
	</select>
	
	<select id="checkClient" resultType="client">
		SELECT *
		FROM client
		WHERE clientId = #{clientId}
	</select>
	
	<select id="getClient" resultType="client">
		SELECT *
		FROM client
		WHERE clientId = #{clientId}
		AND clientId NOT IN (SELECT withdrawId FROM withdraw_info)
	</select>
	
	<select id="getClientEmail" resultType="client">
		SELECT clientEmail, clientEmailCheck
		FROM client
		WHERE clientId = #{clientId}
	</select>
	
	<select id="getClientEmailList" resultType="client">
		SELECT *
		FROM client
		WHERE clientEmailCheck = 'Y'
	</select>
	
	<select id="getClientFindInfo" parameterType="map" resultType="client">
		SELECT *
		FROM client
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keyType == 'clientEmail'">
				AND clientEmail = #{clientEmail}
			</if>
			<if test="keyType == 'clientNum'">
				AND clientNum = #{clientNum}
			</if>
			<if test="searchType == 'clientPwd'">
				AND clientId = #{clientId}
			</if>
		</trim>
		AND clientName = #{clientName}
	</select>
	
	<update id="updateClientPwd" parameterType="client">
		UPDATE client
		SET clientPwd = #{clientPwd}
		WHERE clientId = #{clientId}
	</update>
	
	<update id="updateClient">
		UPDATE client
		SET clientEmail = #{clientEmail}, clientNum = #{clientNum}
		<if test="clientPwd != null and clientPwd != ''">
			, clientPwd = #{clientPwd}
		</if>
		<if test="clientBirth != null and clientBirth != ''">
			, clientBirth = #{clientBirth}
		</if>
		WHERE clientId = #{clientId}
	</update>
	
	<select id="getWishList" parameterType="hashmap" resultType="String">
		SELECT clientMarkList
		FROM client
		WHERE clientId = #{clientId}
	</select>
			
<!-- 마지막 로그인 일자 업데이트 -이지형 추가 -->
	<update id="setLogDate" parameterType="String">
		UPDATE client SET clientLogDate = CURRENT_TIMESTAMP WHERE clientId = #{ clientId }
	</update>

<!-- 로그인 시 쿠키 정보 아이디로 변경하기 -이지형 추가 -->
	<update id="changeCookieSetId" parameterType="Map">
		UPDATE cart
		SET cookieId = null, cookieLimit = null, clientId = #{ clientId }
		WHERE cookieId = #{ cookieId }
	</update>
	
<!-- 회원가입/탈퇴 - 권유진 추가 -->
	<insert id="insertClient">
		INSERT INTO client(clientId, clientPwd, clientName, clientNum, clientEmail, clientEmailCheck, clientPoint, clientBirth)
		VALUES(#{clientId}, #{clientPwd}, #{clientName}, #{clientNum}, #{clientEmail}, #{clientEmailCheck}, #{clientPoint}, #{clientBirth})
	</insert>
	
	<insert id="insertWithdraw">
		INSERT INTO withdraw_info(withdrawId)
		VALUES(#{clientId})
	</insert>
	
	<delete id="deleteWithdrawQna">
		DELETE FROM qna
		WHERE clientId = #{clientId}
	</delete>
</mapper>