<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	 			
<mapper namespace="ReviewDAO">
	<select id="getReviewList" resultType="hashmap">
		SELECT row_number() over(ORDER BY reviewDate) as reviewIdx, r.*, CONCAT(pi.ImageDir, pi.ImageName) as image, op.optionColor, op.optionSize, p.productName, p.productId
		FROM review r
		JOIN option_info op ON r.optionId = op.optionId
		JOIN product p ON p.productId = r.productId
		JOIN product_image pi ON pi.ImageBy = r.productId
		WHERE pi.ImageStatus = '대표'
		<if test="keyword != null and keyword != ''">
			<if test="searchType == 'reviewContent'">
				AND reviewContent like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'clientId'">
				AND clientId like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'productName'">
				AND p.productName like CONCAT('%', #{keyword}, '%')
			</if>
		</if>
		ORDER BY reviewIdx DESC
		LIMIT #{startList}, #{listSize};
	</select>
	
	<select id="getReviewListCnt" resultType="int">
		SELECT count(*)
		FROM review r
		JOIN product p ON p.productId = r.productId
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="searchType == 'reviewContent'">
				AND reviewContent like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'clientId'">
				AND clientId like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'productName'">
				AND p.productName like CONCAT('%', #{keyword}, '%')
			</if>
		</trim>
	</select>
	
	<select id="getReview" resultType="review">
		SELECT *
		FROM review
		WHERE reviewId = #{reviewId}
	</select>
	
	<insert id="insertReview" parameterType="review">
		INSERT INTO review(reviewId, clientId, orderId, optionId, reviewContent, reviewStar, reviewDate, reviewStatus, productId)
		VALUES(#{reviewId}, #{ clientId }, #{ orderId }, #{ optionId }, #{ reviewContent }, #{ reviewStar }, CURRENT_TIMESTAMP, #{ reviewStatus }, #{ productId })
	</insert>
	
<!-- 나의 리뷰 목록 (페이징) - 권유진 추가 -->
	<select id="getMyReviewList" parameterType="hashmap" resultType="hashmap">
		SELECT r.*, CONCAT(pi.ImageDir, pi.ImageName) as image, op.optionColor, op.optionSize, p.productName, p.productId
		FROM review r
		JOIN option_info op ON r.optionId = op.optionId
		JOIN product p ON p.productId = r.productId
		JOIN product_image pi ON pi.ImageBy = r.productId
		WHERE r.clientId = #{clientId} AND pi.ImageStatus = '대표'
		LIMIT #{search.startList}, #{search.listSize}
	</select>
	
	<select id="getMyReviewListCnt" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM review
		WHERE clientId = #{clientId}
	</select>
	
	<select id="getReviewInfo" parameterType="String" resultType="review">
		SELECT * 
		FROM review
		WHERE reviewId = #{ reviewId }
	</select>
	
	<select id="getReviewImage" parameterType="review" resultType="String">
		SELECT CONCAT(imageDir, imageName)
		FROM client_image
		WHERE imageBy = CONCAT(#{ orderId }, '_', #{ optionId })
	</select>
	
	<update id="deleteReview" parameterType="String">
		UPDATE review
		SET reviewStatus = '삭제'
		WHERE reviewId=#{ reviewId }
	</update>
</mapper>