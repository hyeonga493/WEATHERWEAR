<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	 			
<mapper namespace="AdminDAO">

<!-- 
		관리자 목록 가져오기 
-->
	<select id="getAdminList" resultType="admin">
		SELECT row_number() over(ORDER BY adminRegDate) as adminIdx, a.*
		FROM admin a
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keyword != null and keyword != ''">
				<if test="searchType == 'adminId'">
					AND adminId like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'adminName'">
					AND adminName like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'gradeId'">
					AND gradeId = #{keyword}
				</if>
			</if>
		</trim>
		ORDER BY adminIdx DESC
		LIMIT #{startList}, #{listSize}
	</select>
	
<!-- 
		관리자 목록 개수 가져오기 
-->
	<select id="getAdminListCnt" resultType="int">
		SELECT count(*)
		FROM admin
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keyword != null and keyword != ''">
				<if test="searchType == 'adminId'">
					AND adminId like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'adminName'">
					AND adminName like CONCAT('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'gradeId'">
					AND gradeId = #{keyword}
				</if>
			</if>
		</trim>
	</select>
	
<!-- 
		관리자 정보 가져오기 
-->
	<select id="getAdmin" resultType="admin">
		SELECT *
		FROM admin
		WHERE adminId = #{adminId}
	</select>
	
<!-- 
		관리자 정보 등록 
-->
	<insert id="insertAdmin">
		INSERT INTO admin(adminId, adminPwd, adminPwdDate, adminName, adminNum, adminRegDate, gradeId)
		VALUES(#{adminId}, #{adminPwd}, default, #{adminName}, #{adminNum}, default, #{gradeId})
	</insert>
	
<!-- 
		관리자 정보 수정 
-->
	<update id="updateAdmin">
		UPDATE admin
		SET adminPwd = #{adminPwd}, adminNum = #{adminNum}, gradeId = #{gradeId}
		<if test="adminPwdDate != null">
			, adminPwdDate = default
		</if>
		WHERE adminId = #{adminId}
	</update>
	
<!-- 
		관리자 정보 삭제 
-->
	<delete id="deleteAdmin">
		DELETE FROM admin
		WHERE adminId = #{adminId}
	</delete>
	
<!-- 
		마지막 로그인 일자 업데이트 -이지형 추가 
-->
	<update id="setLogDate" parameterType="admin">
		UPDATE admin 
		SET adminLogDate = CURRENT_TIMESTAMP 
		WHERE adminId = #{ adminId }
	</update>
</mapper>