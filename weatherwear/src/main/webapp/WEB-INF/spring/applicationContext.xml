<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

<!-- 암호화 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>	
	
<!-- SqlSessionTemplate을 사용하여 DAO 클래스 구현 -->
		<!-- setter 메소드가 없으므로 생성자 인젝션을 사용해야 합니다. -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>

<!-- MyBatis 연동 : 추가한 라이브러리에서 가져오는 SqlSessionFactoryBean 	-->	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

<!-- Data Source -->
	<!-- 데이터베이스 정보 -->
		<context:property-placeholder location="classpath:config/webserverdb.properties" />
		
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

<!-- Transaction 관리자 설정 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />

<!-- Transaction aop 설정 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="insert*" rollback-for="Exception"/> 
			<tx:method name="update*" rollback-for="Exception"/> 
			<tx:method name="delete*" rollback-for="Exception"/> 
		</tx:attributes>
	</tx:advice>
	
	 <!-- aop -->
	 <aop:config>
		<aop:pointcut expression="execution(* com.w2..*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
	 
	<!-- STMP mail -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${smtp.host}"/>
		<property name="port" value="${smtp.port}"/>
		<property name="username" value="${smtp.username}"/>
		<property name="password" value="${smtp.password}"/>
		<property name="javaMailProperties">
		<props>
			<prop key="mail.smtp.auth">true</prop>
			<prop key="mail.smtp.starttls.enable">true</prop>
			<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
		</props>
		</property>
	</bean>

	<!-- Scheduler -->
		<bean id="schedulerService" class="com.w2.util.SchedulingService" />
		<bean id="CartDAO" class="com.w2.cart.CartDAO" />
		<task:scheduler id="w2Scheduler" pool-size="10" />
		<task:executor id="w2Executor" pool-size="10" />
		<task:annotation-driven scheduler="w2Scheduler" executor="w2Executor" />
		
	<!-- 의존성 주입을 위해 빈 등록 대신 -->
		<context:component-scan base-package="com.w2.util" />
		<context:component-scan base-package="com.w2.weather" />
		<context:component-scan base-package="com.w2.coupon" />
</beans>


